package com.licensekit;
import java.awt.*;

public class SampleAppAboutDialog extends Dialog {

   public SampleAppAboutDialog(Frame parent, boolean modal)
   {
      super(parent, modal);

      // This code is automatically generated by Visual Cafe when you add
      // components to the visual environment. It instantiates and initializes
      // the components. To modify the code, only use code syntax that matches
      // what Visual Cafe can generate, or Visual Cafe may be unable to back
      // parse your Java file into its visual environment.
        
      //{{INIT_CONTROLS
      setLayout(new GridBagLayout());
      setBackground(java.awt.Color.lightGray);
      setSize(386,144);
      setVisible(false);
      label1.setText("Java License Kit  -  Copyright ï¿½ 1999 Stefan Schneider Software");
      label1.setAlignment(java.awt.Label.CENTER);
      add(label1,new GridBagConstraintsD(0,0,1,1,1.0,1.0,java.awt.GridBagConstraints.CENTER,java.awt.GridBagConstraints.HORIZONTAL,new Insets(12,12,0,12),12,0));
      label1.setFont(new Font("Dialog", Font.PLAIN, 12));
      label1.setBounds(12,12,362,23);
      panel1.setLayout(new GridBagLayout());
      add(panel1,new GridBagConstraintsD(0,1,1,1,1.0,1.0,java.awt.GridBagConstraints.CENTER,java.awt.GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));
      panel1.setBounds(0,35,386,62);
      label2.setText("Web:");
      panel1.add(label2,new GridBagConstraintsD(0,0,1,1,0.0,0.0,java.awt.GridBagConstraints.CENTER,java.awt.GridBagConstraints.HORIZONTAL,new Insets(12,12,0,0),12,0));
      label2.setFont(new Font("Dialog", Font.PLAIN, 12));
      label2.setBounds(12,12,61,23);
      textField1.setEditable(false);
      textField1.setText("http://members.eunet.at/stefan.schneider/");
      panel1.add(textField1,new GridBagConstraintsD(1,0,1,1,1.0,0.0,java.awt.GridBagConstraints.CENTER,java.awt.GridBagConstraints.HORIZONTAL,new Insets(12,0,0,12),12,0));
      textField1.setBounds(73,12,301,23);
      label3.setText("Email:");
      panel1.add(label3,new GridBagConstraintsD(0,1,1,1,0.0,0.0,java.awt.GridBagConstraints.CENTER,java.awt.GridBagConstraints.HORIZONTAL,new Insets(4,12,0,0),12,0));
      label3.setFont(new Font("Dialog", Font.PLAIN, 12));
      label3.setBounds(12,39,61,23);
      textField2.setEditable(false);
      textField2.setText("stefan.schneider@eunet.at");
      panel1.add(textField2,new GridBagConstraintsD(1,1,1,1,1.0,0.0,java.awt.GridBagConstraints.CENTER,java.awt.GridBagConstraints.HORIZONTAL,new Insets(4,0,0,12),12,0));
      textField2.setBounds(73,39,301,23);
      okButton.setLabel("OK");
      add(okButton,new GridBagConstraintsD(0,2,1,1,1.0,1.0,java.awt.GridBagConstraints.CENTER,java.awt.GridBagConstraints.NONE,new Insets(12,12,12,12),16,0));
      okButton.setBounds(169,109,47,23);
      setTitle("SampleApp");
      //}}
        
      //{{REGISTER_LISTENERS
      SymWindow aSymWindow = new SymWindow();
      this.addWindowListener(aSymWindow);
      SymAction lSymAction = new SymAction();
      okButton.addActionListener(lSymAction);
      SymKey aSymKey = new SymKey();
      okButton.addKeyListener(aSymKey);
      //}}

   }
    
   public SampleAppAboutDialog(Frame parent, String title, boolean modal)
   {
      this(parent, modal);
      setTitle(title);
   }

   public void addNotify()
   {
      // Record the size of the window prior to calling parents addNotify.
                Dimension d = getSize();

      super.addNotify();

      // Only do this once.
      if (fComponentsAdjusted)
         return;

      // Adjust components according to the insets
      Insets insets = getInsets();
      setSize(insets.left + insets.right + d.width, insets.top + insets.bottom + d.height);
      Component components[] = getComponents();
      for (int i = 0; i < components.length; i++)
      {
         Point p = components[i].getLocation();
         p.translate(insets.left, insets.top);
         components[i].setLocation(p);
      }

      // Used for addNotify check.
      fComponentsAdjusted = true;
   }

   public void setVisible(boolean b)
   {
       if (b)
       {
         pack();
         
         Rectangle bounds = getParent().getBounds();
         Rectangle abounds = getBounds();

         setLocation(bounds.x + (bounds.width - abounds.width)/ 2,
             bounds.y + (bounds.height - abounds.height)/2);
       }

      super.setVisible(b);
   }

   //{{DECLARE_CONTROLS
   java.awt.Label label1 = new java.awt.Label();
   java.awt.Panel panel1 = new java.awt.Panel();
   java.awt.Label label2 = new java.awt.Label();
   java.awt.TextField textField1 = new java.awt.TextField();
   java.awt.Label label3 = new java.awt.Label();
   java.awt.TextField textField2 = new java.awt.TextField();
   java.awt.Button okButton = new java.awt.Button();
   //}}
    
    // Used for addNotify check.
   boolean fComponentsAdjusted = false;

   class SymAction implements java.awt.event.ActionListener
   {
      public void actionPerformed(java.awt.event.ActionEvent event)
      {
         Object object = event.getSource();
         if (object == okButton)
            okButton_ActionPerformed(event);
      }
   }

   void okButton_ActionPerformed(java.awt.event.ActionEvent event)
   {
      try {
         this.dispose();
      } catch (Exception e) {
      }
   }

   class SymWindow extends java.awt.event.WindowAdapter
   {
      public void windowClosing(java.awt.event.WindowEvent event)
      {
         Object object = event.getSource();
         if (object == SampleAppAboutDialog.this)
            SampleAppAboutDialog_WindowClosing(event);
      }
   }

   void SampleAppAboutDialog_WindowClosing(java.awt.event.WindowEvent event)
   {
      try {
         this.dispose();
      } catch (Exception e) {
      }
   }

   class SymKey extends java.awt.event.KeyAdapter
   {
      public void keyPressed(java.awt.event.KeyEvent event)
      {
         Object object = event.getSource();
         if (object == okButton)
            okButton_KeyPressed(event);
      }
   }

   void okButton_KeyPressed(java.awt.event.KeyEvent event)
   {
      try {
         this.dispose();
      } catch (Exception e) {
      }
   }
}
