<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
 	
 	<http pattern="/external/**" security="none"/>
 	
    <http auto-config="true">
        <intercept-url pattern="/app/admin/**" access="ROLE_ADMIN,ROLE_DEFAULT,ROLE_SUPERUSER"/>
        <intercept-url pattern="/app/passwordHint*" access="ROLE_ANONYMOUS,ROLE_ADMIN,ROLE_USER,ROLE_DEFAULT,ROLE_SUPERUSER"/>
        <intercept-url pattern="/app/signup*" access="ROLE_ANONYMOUS,ROLE_ADMIN,ROLE_USER,ROLE_DEFAULT,ROLE_SUPERUSER"/>
        <intercept-url pattern="/app/bpm/license/saveLicense*" access="ROLE_ANONYMOUS,ROLE_ADMIN,ROLE_USER,ROLE_DEFAULT,ROLE_SUPERUSER"/>
        <intercept-url pattern="/app/**" access="ROLE_ADMIN,ROLE_USER,ROLE_DEFAULT,ROLE_SUPERUSER"/>
        <form-login login-page="/login" authentication-failure-url="/login?error=true" default-target-url="/mainMenu" always-use-default-target="true" login-processing-url="/j_spring_security_check"/>
        <remember-me user-service-ref="userDao" key="e37f4b31-0c45-11dd-bd0b-0800200c9a66"/>
        <custom-filter ref="captchaCaptureFilter" before="FORM_LOGIN_FILTER"/>
    </http>

	<beans:bean id="customAuthenticationProvider" class="com.eazytec.webapp.filter.CustomAuthenticationProvider" p:captchaCaptureFilter-ref="captchaCaptureFilter" />
    
    <authentication-manager alias="authenticationManager">
    	<authentication-provider user-service-ref="userDao">
            <password-encoder ref="passwordEncoder">
            </password-encoder>
        </authentication-provider>
    	<authentication-provider ref="customAuthenticationProvider" />
    </authentication-manager>


    <!--
    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:ref bean="roleVoter" />
				<beans:ref bean="authenticatedVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="roleVoter" class="com.eazytec.service.impl.RoleVoter">
		<beans:property name="rolePrefix" value="ROLE_" />
	</beans:bean>

	<beans:bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter">
	</beans:bean>
    -->
    
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource" p:userPropertyToUse="username"/>
        
    <!-- For capturing CAPTCHA fields -->
    <beans:bean id="captchaCaptureFilter" class="com.eazytec.webapp.filter.CaptchaCaptureFilter" ></beans:bean>
  
    <!-- Override the default password-encoder (SHA) by uncommenting the following and changing the class -->
    <!-- <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/> -->

    <global-method-security pre-post-annotations="enabled">
        <!-- <protect-pointcut expression="execution(* *..service.UserManager.getUsers(..))" access="ROLE_ADMIN"/>
        <protect-pointcut expression="execution(* *..service.UserManager.removeUser(..))" access="ROLE_ADMIN"/> -->
        <protect-pointcut expression="execution(* *..bpm.admin.department.service.*(..))" access="ROLE_ADMIN"/>
        <!-- <protect-pointcut expression="execution(* *..bpm.admin.role.service.*(..))" access="ROLE_ADMIN"/>
        <protect-pointcut expression="execution(* *..bpm.admin.group.service.*(..))" access="ROLE_ADMIN"/> -->
    </global-method-security>
    
</beans:beans>
