<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd"
       default-lazy-init="true">

    <bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator"/>
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

	<bean id="namingStrategy" class="com.eazytec.dao.hibernate.config.CustomNamingStrategy"/>
    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" destroy-method="destroy">
        <property name="dataSource" ref="dataSource"/>
        <property name="namingStrategy" ref="namingStrategy"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop> 
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
            </props>
            <!-- Turn batching off for better error messages under PostgreSQL -->
            <!-- hibernate.jdbc.batch_size=0 -->
        </property>
    </bean>
    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="tableDao" class="com.eazytec.bpm.runtime.table.dao.impl.TableDaoImpl">
    	<property name="dataBaseSchemaName">
			<value>${db.name}</value>
		</property>
		
		<property name="dataBaseSchema">
			<value>${db.source}</value>
		</property>
    </bean>
	
	<bean id="listViewDao" class="com.eazytec.bpm.runtime.listView.dao.impl.ListViewDaoImpl">
		<property name="dataBaseSchema">
			<value>${db.source}</value>
		</property>
	</bean>
	
	<bean id="moduleDao" class="com.eazytec.bpm.admin.module.dao.impl.ModuleDaoImpl">
		<property name="dataBaseSchema">
			<value>${db.source}</value>
		</property>
	</bean>

	<bean id="scheduleDao" class="com.eazytec.bpm.oa.schedule.dao.impl.ScheduleDaoImpl">
		<property name="dataBaseSchema">
			<value>${db.source}</value>
		</property>
	</bean>
	
    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>

    <!-- Activates scanning of @Repository -->
    <context:component-scan base-package="com.eazytec.dao"/>

</beans>
